import unittest
from rectangle import Rectangle


''' –ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
üìå –ù–∞ —Å–µ–º–∏–Ω–∞—Ä–∞—Ö –ø–æ –û–û–ü –±—ã–ª —Å–æ–∑–¥–∞–Ω –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Ö—Ä–∞–Ω—è—â–∏–π –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É, –∞ —Ç–∞–∫–∂–µ –≤—ã—á–∏—Å–ª—è—é—â—É—é –ø–µ—Ä–∏–º–µ—Ç—Ä,
–ø–ª–æ—â–∞–¥—å –∏ –ø–æ–∑–≤–æ–ª—è—é—â–∏–π —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å –∏ –≤—ã—á–∏—Ç–∞—Ç—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏ –±–µ—Ä—è –∑–∞ –æ—Å–Ω–æ–≤—É –ø–µ—Ä–∏–º–µ—Ç—Ä.
üìå –ù–∞–ø–∏—à–∏—Ç–µ 3-7 —Ç–µ—Å—Ç–æ–≤ unittest –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.
'''

class TestRectangle(unittest.TestCase):

    def test_init(self):
        r = Rectangle(20, 10)
        self.assertEqual(r.length, 20)
        self.assertEqual(r.width, 10)
        r = Rectangle(10) 
        self.assertEqual(r.length, 10)
        self.assertEqual(r.width, 10)

    def test_get_perimeter(self):
        r = Rectangle(20, 10)
        self.assertEqual(r.get_perimeter(), 60)
        r = Rectangle(10)
        self.assertEqual(r.get_perimeter(), 40)

    def test_get_area(self):
        r = Rectangle(20, 10)
        self.assertEqual(r.get_area(), 200)
        r = Rectangle(10)
        self.assertEqual(r.get_area(), 100)

    def test_add(self):
        r1 = Rectangle(20, 10)
        r2 = Rectangle(10, 5)
        r3 = r1 + r2
        self.assertEqual(r3.length, 30)
        self.assertEqual(r3.width, 15)

    def test_sub(self):
        r1 = Rectangle(20, 10)
        r2 = Rectangle(10, 5)
        r3 = r1 - r2
        self.assertEqual(r3.length, 10) 
        self.assertEqual(r3.width, 5)

    def test_lt(self):
        r1 = Rectangle(10, 5)
        r2 = Rectangle(20, 10)
        self.assertTrue(r1 < r2)

    def test_eq(self):
        r1 = Rectangle(20, 10)
        r2 = Rectangle(20, 10)
        self.assertTrue(r1 == r2)


if __name__ == '__main__':
    unittest.main()
