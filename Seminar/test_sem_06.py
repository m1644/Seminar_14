import pytest
import json
from add_users import User, Project, LevelError, AccessError


''' –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
üìå –ù–∞ —Å–µ–º–∏–Ω–∞—Ä–µ 13 –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–∏–º—è, id, —É—Ä–æ–≤–µ–Ω—å).
üìå –ù–∞–ø–∏—à–∏—Ç–µ 3-7 —Ç–µ—Å—Ç–æ–≤ pytest –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.
üìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–∫—Å—Ç—É—Ä—ã.
'''

@pytest.fixture
def temp_users_file(tmp_path):
    users_data = {
        "1": {"name": "User1", "access_level": 1},
        "2": {"name": "User2", "access_level": 5},
        "3": {"name": "User3", "access_level": 7}
    }
    users_file = tmp_path / "temp_users.json"
    with open(users_file, "w", encoding="utf-8") as file:
        json.dump(users_data, file, indent=4, ensure_ascii=False)
    return users_file

def test_load_users(temp_users_file):
    project = Project(temp_users_file)
    assert len(project.users) == 3
    assert project.users[0].name == "User1"
    assert project.users[1].access_level == 5

def test_login(temp_users_file, capsys):
    project = Project(temp_users_file)
    project.login("User1", 1)
    captured = capsys.readouterr()
    assert "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, User1! –í–∞—à —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: 1." in captured.out

    with pytest.raises(AccessError, match="–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ."):
        project.login("User4", 4)

def test_add_user(temp_users_file, capsys):
    project = Project(temp_users_file)
    project.add_user("NewUser", "10", 7)
    assert len(project.users) == 4
    assert project.users[3].name == "NewUser"
    assert project.users[3].access_level == 7
    with pytest.raises(LevelError, match="–û—à–∏–±–∫–∞ —É—Ä–æ–≤–Ω—è: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."):
        project.add_user("AnotherUser", "5", 1)
    with pytest.raises(AccessError, match="–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."):
        project.add_user("User3", "3", 7)


if __name__ == '__main__':
    pytest.main(['-v'])
